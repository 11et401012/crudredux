{"version":3,"sources":["components/postForm/postForm.js","Post.js","components/editPost/editpost.js","components/listPost/listPost.js","App.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","data","id","Date","editing","props","dispatch","type","className","onSubmit","this","required","ref","input","placeholder","rows","cols","Component","connect","Post","post","onClick","EditComponent","handleEdit","newTitle","newMessage","key","defaultValue","AllPost","posts","map","state","App","postReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc73e0b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nclass PostForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message =  this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message,\n      editing:false\n    }\n    this.props.dispatch({\n      type:'ADD_POST',\n      data});\n    this.getTitle.value = '';\n    this.getMessage.value = '';\n  }\nrender() {\nreturn (\n<div className=\"post-container\">\n  <h1 className=\"post_heading\">Create Post</h1>\n  <form className=\"form\" onSubmit={this.handleSubmit} >\n   <input required type=\"text\" ref={(input) => this.getTitle = input}\n   placeholder=\"Enter Post Title\" /><br /><br />\n   <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\n   cols=\"28\" placeholder=\"Enter Post\" /><br /><br />\n   <button>Post</button>\n  </form>\n</div>\n);\n}\n}\nexport default connect()(PostForm);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass Post extends Component {\n  render() {\n  return (\n    <div className=\"post\">\n    <h2 className=\"post_title\">{this.props.post.title}</h2>\n    <p className=\"post_message\">{this.props.post.message}</p>\n    <div className=\"control-buttons\">\n      <button className=\"edit\"\n      onClick={() => this.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id })\n      }\n      >Edit</button>\n      <button className=\"delete\"\n      onClick={() => this.props.dispatch({ type: 'DELETE_POST', id: this.props.post.id })}\n      >Delete</button>\n    </div>\n  </div>\n  );\n }\n}\nexport default connect()(Post);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass EditComponent extends Component {\nhandleEdit = (e) => {\n  e.preventDefault();\n  const newTitle = this.getTitle.value;\n  const newMessage = this.getMessage.value;\n  const data = {\n    newTitle,\n    newMessage\n  }\n  this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: data })\n}\nrender() {\nreturn (\n<div key={this.props.post.id} className=\"post\">\n  <form className=\"form\" onSubmit={this.handleEdit}>\n    <input required type=\"text\" ref={(input) => this.getTitle = input}\n    defaultValue={this.props.post.title} placeholder=\"Enter Post Title\" /><br /><br />\n    <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\n    defaultValue={this.props.post.message} cols=\"28\" placeholder=\"Enter Post\" /><br /><br />\n    <button>Update</button>\n  </form>\n</div>\n);\n}\n}\nexport default connect()(EditComponent);","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Post from '../../Post';\n\nimport EditComponent from '../editPost/editpost';\n\nclass AllPost extends Component {\n    render() {\n        return (\n            <div>\n            <h1 className=\"post_heading\">All Posts</h1>\n            {this.props.posts.map((post) => (\n            <div key={post.id}>\n              {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post}\n              key={post.id} />}\n            </div>\n          ))}\n          </div>\n          );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state\n    }\n}\nexport default connect(mapStateToProps)(AllPost);","\n\nimport React, { Component } from 'react';\nimport PostForm from './components/postForm/postForm';\nimport AllPost from './components/listPost/listPost';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n        <div className=\"navbar\">\n    <h2 className=\"center \">Post It</h2>\n    </div>\n    <PostForm />\n    <AllPost />\n    </div>\n    );\n    }\n  }\nexport default App;\n","const postReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_POST\":\n      return state.concat([action.data]);\n    case \"DELETE_POST\":\n      return state.filter(post => post.id !== action.id);\n    case \"EDIT_POST\":\n      return state.map(post =>\n        post.id === action.id ? { ...post, editing: !post.editing } : post\n      );\n    case \"UPDATE\":\n      return state.map(post => {\n        if (post.id === action.id) {\n          return {\n            ...post,\n            title: action.data.newTitle,\n            message: action.data.newMessage,\n            editing: !post.editing\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n};\nexport default postReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n\nimport postReducer from './reducers/postReducer';\nconst store = createStore(postReducer);\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}