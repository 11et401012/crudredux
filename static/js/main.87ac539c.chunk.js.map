{"version":3,"sources":["components/postForm/postForm.js","components/Modals/modalForm.js","components/listPost/listPost.js","App.js","reducers/postReducer.js","index.js"],"names":["AddEditForm","state","id","first","last","email","phone","location","hobby","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","data","console","log","props","dispatch","type","submitFormEdit","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","updateState","toggle","catch","err","this","Form","onSubmit","FormGroup","Label","for","Input","placeholder","Button","React","Component","connect","ModalForm","prevState","modal","closeBtn","className","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","addItemToState","DataTable","items","map","key","scope","width","deleteItem","Table","responsive","hover","App","itemIndex","findIndex","newArray","slice","deleteItemFromState","updatedItems","filter","Container","Row","Col","margin","postReducer","action","concat","post","editing","newTitle","message","newMessage","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87ac539c.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass AddEditForm extends React.Component {\n  state = {\n    id: 0,\n    first: '',\n    last: '',\n    email: '',\n    phone: '',\n    location: '',\n    hobby: ''\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  submitFormAdd = (e) => {\n    e.preventDefault();\n    // const title = this.title.value;\n    // const message =  this.getMessage.value;\n\n    const id = this.state.id;\n    const first= this.state.first;\n    const last = this.state.last;\n    const email=this.state.email ;\n    const phone = this.state.phone;\n    const location= this.state.location;\n    const hobby=this.state.hobby ;\n    const data = {\n      id,\n      first,\n      \n      last,\n      email,\n      phone,\n      location,\n      hobby\n    }\n    console.log({data})\n    this.props.dispatch({\n      type:'ADD_POST',\n      data});\n    //this.getTitle.value = '';\n   // this.getMessage.value = '';\n  }\n//   submitFormAdd = e => {\n//     e.preventDefault()\n//     fetch('http://localhost:3000/crud', {\n//       method: 'post',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         first: this.state.first,\n//         last: this.state.last,\n//         email: this.state.email,\n//         phone: this.state.phone,\n//         location: this.state.location,\n//         hobby: this.state.hobby\n//       })\n//     })\n//       .then(response => response.json())\n//       .then(item => {\n//         if(Array.isArray(item)) {\n//           this.props.addItemToState(item[0])\n//           this.props.toggle()\n//         } else {\n//           console.log('failure')\n//         }\n//       })\n//       .catch(err => console.log(err))\n//   }\n\n  submitFormEdit = e => {\n    e.preventDefault()\n    fetch('http://localhost:3000/crud', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.id,\n        first: this.state.first,\n        last: this.state.last,\n        email: this.state.email,\n        phone: this.state.phone,\n        location: this.state.location,\n        hobby: this.state.hobby\n      })\n    })\n      .then(response => response.json())\n      .then(item => {\n        if(Array.isArray(item)) {\n          // console.log(item[0])\n          this.props.updateState(item[0])\n          this.props.toggle()\n        } else {\n          console.log('failure')\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  componentDidMount(){\n    // if item exists, populate the state with proper data\n    if(this.props.item){\n      const { id, first, last, email, phone, location, hobby } = this.props.item\n      this.setState({ id, first, last, email, phone, location, hobby })\n    }\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n        <FormGroup>\n          <Label for=\"first\">First Name</Label>\n          <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"last\">Last Name</Label>\n          <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phone\">Phone</Label>\n          <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone}  placeholder=\"ex. 555-555-5555\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"location\">Location</Label>\n          <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"hobby\">Hobby</Label>\n          <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby}  />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default connect() (AddEditForm)","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport AddEditForm from '../postForm/postForm'\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modal: false\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\n\n      const label = this.props.buttonLabel\n\n      let button = ''\n      let title = ''\n\n      if(label === 'Edit'){\n        button = <Button\n                  color=\"warning\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Edit Item'\n      } else {\n        button = <Button\n                  color=\"success\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Add New Item'\n      }\n\n\n      return (\n      <div>\n        {button}\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\n          <ModalBody>\n            <AddEditForm\n              addItemToState={this.props.addItemToState}\n              updateState={this.props.updateState}\n              toggle={this.toggle}\n              item={this.props.item} />\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ModalForm","// import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\n// import Post from '../../Post';\n\n// import EditComponent from '../editPost/editpost';\n\n// class AllPost extends Component {\n//     render() {\n//         return (\n//             <div>\n//             <h1 className=\"post_heading\">All Posts</h1>\n//             {this.props.posts.map((post) => (\n//             <div key={post.id}>\n//               {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post}\n//               key={post.id} />}\n//             </div>\n//           ))}\n//           </div>\n//           );\n//     }\n// }\n\n// const mapStateToProps = (state) => {\n//     return {\n//         posts: state\n//     }\n// }\n// export default connect(mapStateToProps)(AllPost);\n\nimport React, { Component } from 'react'\nimport { Table, Button } from 'reactstrap';\nimport ModalForm from '../Modals/modalForm'\n\nclass DataTable extends Component {\n\n  render() {\n\n    const items = this.props.items.map(item => {\n      return (\n        <tr key={item.id}>\n          <th scope=\"row\">{item.id}</th>\n          <td>{item.first}</td>\n          <td>{item.last}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n          <td>{item.location}</td>\n          <td>{item.hobby}</td>\n          <td>\n            <div style={{width:\"110px\",float:\"right\"}}>\n              <ModalForm buttonLabel=\"Edit\" item={item} updateState={this.props.updateState}/>\n              {' '}\n              <Button color=\"danger\" onClick={() => this.deleteItem(item.id)}>Del</Button>\n            </div>\n          </td>\n        </tr>\n        )\n      })\n\n    return (\n      <Table responsive hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First</th>\n            <th>Last</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Location</th>\n            <th>Hobby</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\n// export default DataTable\nconst mapStateToProps = (state) => {\n    return {\n        items: state\n    }\n}\nexport default connect(mapStateToProps)(DataTable);\n","\n\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap'\n\n//import PostForm from './components/postForm/postForm';\nimport DataTable from './components/listPost/listPost';\nimport ModalForm from './components/Modals/modalForm';\n\n\n\nclass App extends Component {\n  state = {\n    items: []\n  }\n\n  \n\n  addItemToState = (item) => {\n    this.setState(prevState => ({\n      items: [...prevState.items, item]\n    }))\n  }\n\n  updateState = (item) => {\n    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n    const newArray = [\n    // destructure all items from beginning to the indexed item\n      ...this.state.items.slice(0, itemIndex),\n    // add the updated item to the array\n      item,\n    // add the rest of the items to the array from the index after the replaced item\n      ...this.state.items.slice(itemIndex + 1)\n    ]\n    this.setState({ items: newArray })\n  }\n\n  deleteItemFromState = (id) => {\n    const updatedItems = this.state.items.filter(item => item.id !== id)\n    this.setState({ items: updatedItems })\n  }\n  render() {\n    return (\n      <Container className=\"App\">\n      <Row>\n        <Col>\n          <h1 style={{margin: \"20px 0\"}}>CRUD Database</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState}/>\n        </Col>\n      </Row>\n    </Container>\n    );\n    }\n  }\nexport default App;\n//items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} \n","const postReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_POST\":\n      return state.concat([action.data]);\n    case \"DELETE_POST\":\n      return state.filter(post => post.id !== action.id);\n    case \"EDIT_POST\":\n      return state.map(post =>\n        post.id === action.id ? { ...post, editing: !post.editing } : post\n      );\n    case \"UPDATE\":\n      return state.map(post => {\n        if (post.id === action.id) {\n          return {\n            ...post,\n            title: action.data.newTitle,\n            message: action.data.newMessage,\n            editing: !post.editing\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n};\nexport default postReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport postReducer from './reducers/postReducer';\nconst store = createStore(postReducer);\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}